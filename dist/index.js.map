{"version":3,"file":"index.js","sources":["../src/lib/MongoDocSchema.ts","../src/lib/MongoDoc.ts","../src/lib/MongoProviderError.ts","../src/lib/MongoProvider.ts","../src/index.ts"],"sourcesContent":["import { Schema } from 'mongoose';\n\nexport const MongoDocSchema: Schema = new Schema({\n  key: { type: String, required: true },\n  value: { type: Schema.Types.Mixed, required: true }\n});\n","import type { MongoDocType } from './MongoDocType';\nimport { MongoDocSchema } from './MongoDocSchema';\nimport mongoose, { Model } from 'mongoose';\n\nexport function generateMongoDoc(collectionName: string): Model<MongoDocType> {\n  return mongoose.model('MongoDoc', MongoDocSchema, collectionName);\n}\n","import { JoshProviderError } from '@joshdb/core';\n\nexport class MongoProviderError extends JoshProviderError {\n  /**\n   * The name for this error.\n   */\n  public get name() {\n    return 'MongoProviderError';\n  }\n}\n","import {\n  AutoKeyPayload,\n  ClearPayload,\n  DecPayload,\n  DeletePayload,\n  EnsurePayload,\n  EveryByHookPayload,\n  EveryByValuePayload,\n  EveryPayload,\n  FilterByHookPayload,\n  FilterByValuePayload,\n  FilterPayload,\n  FindByHookPayload,\n  FindByValuePayload,\n  FindPayload,\n  GetAllPayload,\n  GetManyPayload,\n  GetPayload,\n  HasPayload,\n  IncPayload,\n  isEveryByHookPayload,\n  isEveryByValuePayload,\n  isFilterByHookPayload,\n  isFilterByValuePayload,\n  isFindByHookPayload,\n  isFindByValuePayload,\n  isMapByHookPayload,\n  isMapByPathPayload,\n  isPartitionByHookPayload,\n  isPartitionByValuePayload,\n  isRemoveByHookPayload,\n  isRemoveByValuePayload,\n  isSomeByHookPayload,\n  isSomeByValuePayload,\n  JoshError,\n  JoshProvider,\n  KeysPayload,\n  MapByHookPayload,\n  MapByPathPayload,\n  MapPayload,\n  MathOperator,\n  MathPayload,\n  Method,\n  PartitionByHookPayload,\n  PartitionByValuePayload,\n  PartitionPayload,\n  PushPayload,\n  RandomKeyPayload,\n  RandomPayload,\n  RemoveByHookPayload,\n  RemoveByValuePayload,\n  RemovePayload,\n  SetManyPayload,\n  SetPayload,\n  SizePayload,\n  SomeByHookPayload,\n  SomeByValuePayload,\n  SomePayload,\n  UpdatePayload,\n  ValuesPayload\n} from '@joshdb/core';\nimport { deleteFromObject, getFromObject } from '@realware/utilities';\nimport { isNullOrUndefined, isNumber, isPrimitive } from '@sapphire/utilities';\nimport mongoose, { Model, Mongoose } from 'mongoose';\nimport { generateMongoDoc } from './MongoDoc';\nimport type { MongoDocType } from './MongoDocType';\nimport { MongoProviderError } from './MongoProviderError';\n\nexport class MongoProvider<StoredValue = unknown> extends JoshProvider<StoredValue> {\n  public declare options: MongoProvider.Options;\n\n  private connectionURI?: string;\n\n  private _client?: Mongoose;\n\n  private _collection?: Model<MongoDocType>;\n\n  public constructor(options: MongoProvider.Options) {\n    super(options);\n  }\n\n  public async init(context: JoshProvider.Context<StoredValue>): Promise<JoshProvider.Context<StoredValue>> {\n    context = await super.init(context);\n\n    const { collectionName = context.name, enforceCollectionName, authentication = MongoProvider.defaultAuthentication } = this.options;\n\n    if (collectionName === undefined)\n      throw new JoshError({\n        message: 'A collection name must be provided if using this class without Josh.',\n        identifier: MongoProvider.Identifiers.InitMissingCollectionName\n      });\n\n    this._collection = generateMongoDoc(enforceCollectionName ? collectionName.replace(/[^a-z0-9]/gi, '_').toLowerCase() : collectionName);\n\n    if (typeof authentication === 'string') this.connectionURI = authentication;\n    else {\n      const { user, password, dbName, host, port }: MongoProvider.Authentication = {\n        user: authentication.user ?? MongoProvider.defaultAuthentication.user,\n        password: authentication.password ?? MongoProvider.defaultAuthentication.password,\n        dbName: authentication.dbName ?? MongoProvider.defaultAuthentication.dbName,\n        host: authentication.host ?? MongoProvider.defaultAuthentication.host,\n        port: authentication.port ?? MongoProvider.defaultAuthentication.port\n      };\n\n      this.connectionURI = `mongodb://${user?.length && password?.length ? `${user}:${password}@` : ''}${host}:${port}/${dbName}`;\n    }\n\n    this._client = await mongoose.connect(this.connectionURI);\n\n    return context;\n  }\n\n  public async close() {\n    return this.client.disconnect();\n  }\n\n  public [Method.AutoKey](payload: AutoKeyPayload): AutoKeyPayload {\n    payload.data = new mongoose.Types.ObjectId().toString();\n\n    return payload;\n  }\n\n  public async [Method.Clear](payload: ClearPayload): Promise<ClearPayload> {\n    await this.collection.deleteMany({});\n\n    return payload;\n  }\n\n  public async [Method.Dec](payload: DecPayload): Promise<DecPayload> {\n    const { key, path } = payload;\n    const { data } = await this.get<StoredValue>({ key, method: Method.Get, path });\n\n    if (data === undefined) {\n      payload.error = new MongoProviderError({\n        identifier: MongoProvider.CommonIdentifiers.DecMissingData,\n        message: path.length === 0 ? `The data at \"${key}\" does not exist.` : `The data at \"${key}.${path.join('.')}\" does not exist.`,\n        method: Method.Dec\n      });\n\n      return payload;\n    }\n\n    if (!isNumber(data)) {\n      payload.error = new MongoProviderError({\n        identifier: MongoProvider.CommonIdentifiers.DecInvalidType,\n        message:\n          path.length === 0 ? `The data at \"${key}\" must be of type \"number\".` : `The data at \"${key}.${path.join('.')}\" must be of type \"number\".`,\n        method: Method.Dec\n      });\n\n      return payload;\n    }\n\n    await this.set({ method: Method.Set, key, path, value: data - 1 });\n\n    return payload;\n  }\n\n  public async [Method.Delete](payload: DeletePayload): Promise<DeletePayload> {\n    const { key, path } = payload;\n\n    if (path.length === 0) {\n      await this.collection.deleteOne({ key });\n\n      return payload;\n    }\n\n    if ((await this.has({ method: Method.Has, key, path, data: false })).data) {\n      const { data } = await this.get({ method: Method.Get, key, path: [] });\n\n      deleteFromObject(data, path);\n\n      await this.set({ method: Method.Set, key, path: [], value: data });\n\n      return payload;\n    }\n\n    return payload;\n  }\n\n  public async [Method.Ensure](payload: EnsurePayload<StoredValue>): Promise<EnsurePayload<StoredValue>> {\n    const { key } = payload;\n\n    if (!(await this.has({ key, method: Method.Has, data: false, path: [] })).data)\n      await this.set({ key, value: payload.defaultValue, method: Method.Set, path: [] });\n\n    payload.data = (await this.get({ key, method: Method.Get, path: [] })).data as StoredValue;\n\n    return payload;\n  }\n\n  public async [Method.Every](payload: EveryByHookPayload<StoredValue>): Promise<EveryByHookPayload<StoredValue>>;\n  public async [Method.Every](payload: EveryByValuePayload): Promise<EveryByValuePayload>;\n  public async [Method.Every](payload: EveryPayload<StoredValue>): Promise<EveryPayload<StoredValue>> {\n    if ((await this.size({ method: Method.Size, data: 0 })).data === 0) {\n      payload.data = true;\n\n      return payload;\n    }\n    if (isEveryByHookPayload(payload)) {\n      const { hook } = payload;\n\n      for (const value of (await this.values({ method: Method.Values, data: [] })).data) {\n        const everyValue = await hook(value);\n\n        if (everyValue) continue;\n\n        payload.data = false;\n      }\n    }\n\n    if (isEveryByValuePayload(payload)) {\n      const { path, value } = payload;\n\n      for (const key of (await this.keys({ method: Method.Keys, data: [] })).data) {\n        const { data } = await this.get({ method: Method.Get, key, path });\n\n        if (value === data) continue;\n\n        payload.data = false;\n      }\n    }\n\n    return payload;\n  }\n\n  public async [Method.Filter](payload: FilterByHookPayload<StoredValue>): Promise<FilterByHookPayload<StoredValue>>;\n  public async [Method.Filter](payload: FilterByValuePayload<StoredValue>): Promise<FilterByValuePayload<StoredValue>>;\n  public async [Method.Filter](payload: FilterPayload<StoredValue>): Promise<FilterPayload<StoredValue>> {\n    if (isFilterByHookPayload(payload)) {\n      const { hook } = payload;\n\n      for (const [key, value] of Object.entries((await this.getAll({ method: Method.GetAll, data: {} })).data)) {\n        const filterValue = await hook(value);\n\n        if (!filterValue) continue;\n\n        payload.data[key] = value;\n      }\n    }\n\n    if (isFilterByValuePayload(payload)) {\n      const { path, value } = payload;\n\n      if (!isPrimitive(value)) {\n        payload.error = new MongoProviderError({\n          identifier: MongoProvider.CommonIdentifiers.FilterInvalidValue,\n          message: 'The \"value\" must be a primitive type.',\n          method: Method.Filter\n        });\n\n        return payload;\n      }\n\n      for (const [key, storedValue] of Object.entries((await this.getAll({ method: Method.GetAll, data: {} })).data))\n        if (value === (path.length === 0 ? storedValue : getFromObject(storedValue, path))) payload.data[key] = storedValue;\n    }\n\n    return payload;\n  }\n\n  public async [Method.Find](payload: FindByHookPayload<StoredValue>): Promise<FindByHookPayload<StoredValue>>;\n  public async [Method.Find](payload: FindByValuePayload<StoredValue>): Promise<FindByValuePayload<StoredValue>>;\n  public async [Method.Find](payload: FindPayload<StoredValue>): Promise<FindPayload<StoredValue>> {\n    if (isFindByHookPayload(payload)) {\n      const { hook } = payload;\n\n      for (const value of (await this.values({ method: Method.Values, data: [] })).data) {\n        const foundValue = await hook(value);\n\n        if (!foundValue) continue;\n\n        payload.data = value;\n\n        break;\n      }\n    }\n\n    if (isFindByValuePayload(payload)) {\n      const { path, value } = payload;\n\n      if (!isPrimitive(value)) {\n        payload.error = new MongoProviderError({\n          identifier: MongoProvider.CommonIdentifiers.FindInvalidValue,\n          message: 'The \"value\" must be of type primitive.',\n          method: Method.Find\n        });\n\n        return payload;\n      }\n\n      for (const storedValue of (await this.values({ method: Method.Values, data: [] })).data) {\n        if (payload.data !== undefined) break;\n        if (value === (path.length === 0 ? storedValue : getFromObject(storedValue, path))) payload.data = storedValue;\n      }\n    }\n\n    return payload;\n  }\n\n  public async [Method.Get]<StoredValue>(payload: GetPayload<StoredValue>): Promise<GetPayload<StoredValue>> {\n    const { key, path } = payload;\n\n    const doc = await this.collection.findOne({ key });\n\n    if (!doc) {\n      payload.data = undefined;\n\n      return payload;\n    }\n\n    Reflect.set(payload, 'data', doc.value);\n\n    if (path.length > 0) payload.data = getFromObject(payload.data, path);\n\n    return payload;\n  }\n\n  public async [Method.GetAll](payload: GetAllPayload<StoredValue>): Promise<GetAllPayload<StoredValue>> {\n    const docs = (await this.collection.find({})) || [];\n\n    for (const doc of docs) Reflect.set(payload.data, doc.key, doc.value);\n\n    return payload;\n  }\n\n  public async [Method.GetMany](payload: GetManyPayload<StoredValue>): Promise<GetManyPayload<StoredValue>> {\n    const { keys } = payload;\n\n    const docs = (await this.collection.find({ key: { $in: keys } })) || [];\n\n    for (const doc of docs) Reflect.set(payload.data, doc.key, doc.value);\n\n    return payload;\n  }\n\n  public async [Method.Has](payload: HasPayload): Promise<HasPayload> {\n    const { key, path } = payload;\n    let isThere;\n\n    if (path.length === 0) {\n      isThere = await this.collection.exists({ key });\n    } else {\n      isThere = await this.collection.exists({ key, [`value.${path.join('.')}`]: { $exists: true } });\n    }\n\n    payload.data = isThere;\n\n    return payload;\n  }\n\n  public async [Method.Inc](payload: IncPayload): Promise<IncPayload> {\n    const { key, path } = payload;\n    const { data } = await this.get<StoredValue>({ method: Method.Get, key, path });\n\n    if (data === undefined) {\n      payload.error = new MongoProviderError({\n        identifier: MongoProvider.CommonIdentifiers.IncMissingData,\n        message: path.length === 0 ? `The data at \"${key}\" does not exist.` : `The data at \"${key}.${path.join('.')}\" does not exist.`,\n        method: Method.Inc\n      });\n\n      return payload;\n    }\n    if (!isNumber(data)) {\n      payload.error = new MongoProviderError({\n        identifier: MongoProvider.CommonIdentifiers.IncInvalidType,\n        message:\n          path.length === 0 ? `The data at \"${key}\" must be of type \"number\".` : `The data at \"${key}.${path.join('.')}\" must be of type \"number\".`,\n        method: Method.Inc\n      });\n\n      return payload;\n    }\n\n    await this.set({ method: Method.Set, key, path, value: data + 1 });\n\n    return payload;\n  }\n\n  public async [Method.Keys](payload: KeysPayload): Promise<KeysPayload> {\n    const docs = (await this.collection.find({})) || [];\n\n    for (const doc of docs) payload.data.push(doc.key);\n\n    return payload;\n  }\n\n  public async [Method.Map]<DataValue = StoredValue, HookValue = DataValue>(\n    payload: MapByHookPayload<DataValue, HookValue>\n  ): Promise<MapByHookPayload<DataValue, HookValue>>;\n\n  public async [Method.Map]<DataValue = StoredValue>(payload: MapByPathPayload<DataValue>): Promise<MapByPathPayload<DataValue>>;\n  public async [Method.Map]<DataValue = StoredValue, HookValue = DataValue>(\n    payload: MapPayload<DataValue, HookValue>\n  ): Promise<MapPayload<DataValue, HookValue>> {\n    if (isMapByHookPayload(payload)) {\n      const { hook } = payload;\n\n      // @ts-expect-error 2345\n      for (const value of (await this.values({ method: Method.Values, data: [] })).data) payload.data.push(await hook(value));\n    }\n\n    if (isMapByPathPayload(payload)) {\n      const { path } = payload;\n\n      for (const value of (await this.values({ method: Method.Values, data: [] })).data)\n        payload.data.push((path.length === 0 ? value : getFromObject(value, path)) as DataValue);\n    }\n\n    return payload;\n  }\n\n  public async [Method.Math](payload: MathPayload): Promise<MathPayload> {\n    const { key, path, operator, operand } = payload;\n    let { data } = await this.get<number>({ method: Method.Get, key, path });\n\n    if (data === undefined) {\n      payload.error = new MongoProviderError({\n        identifier: MongoProvider.CommonIdentifiers.MathMissingData,\n        message: path.length === 0 ? `The data at \"${key}\" does not exist.` : `The data at \"${key}.${path.join('.')}\" does not exist.`,\n        method: Method.Math\n      });\n\n      return payload;\n    }\n\n    if (!isNumber(data)) {\n      payload.error = new MongoProviderError({\n        identifier: MongoProvider.CommonIdentifiers.MathInvalidType,\n        message: path.length === 0 ? `The data at \"${key}\" must be a number.` : `The data at \"${key}.${path.join('.')}\" must be a number.`,\n        method: Method.Math\n      });\n\n      return payload;\n    }\n\n    switch (operator) {\n      case MathOperator.Addition:\n        data += operand;\n\n        break;\n\n      case MathOperator.Subtraction:\n        data -= operand;\n\n        break;\n\n      case MathOperator.Multiplication:\n        data *= operand;\n\n        break;\n\n      case MathOperator.Division:\n        data /= operand;\n\n        break;\n\n      case MathOperator.Remainder:\n        data %= operand;\n\n        break;\n\n      case MathOperator.Exponent:\n        data **= operand;\n\n        break;\n    }\n\n    await this.set({ method: Method.Set, key, path, value: data });\n\n    return payload;\n  }\n\n  public async [Method.Partition](payload: PartitionByHookPayload<StoredValue>): Promise<PartitionByHookPayload<StoredValue>>;\n  public async [Method.Partition](payload: PartitionByValuePayload<StoredValue>): Promise<PartitionByValuePayload<StoredValue>>;\n  public async [Method.Partition](payload: PartitionPayload<StoredValue>): Promise<PartitionPayload<StoredValue>> {\n    if (isPartitionByHookPayload(payload)) {\n      const { hook } = payload;\n\n      for (const [key, value] of Object.entries((await this.getAll({ method: Method.GetAll, data: {} })).data)) {\n        const filterValue = await hook(value);\n\n        if (filterValue) payload.data.truthy[key] = value;\n        else payload.data.falsy[key] = value;\n      }\n    }\n\n    if (isPartitionByValuePayload(payload)) {\n      const { path, value } = payload;\n\n      if (!isPrimitive(value)) {\n        payload.error = new MongoProviderError({\n          identifier: MongoProvider.CommonIdentifiers.PartitionInvalidValue,\n          message: 'The \"value\" must be a primitive type.',\n          method: Method.Partition\n        });\n\n        return payload;\n      }\n\n      for (const [key, storedValue] of Object.entries((await this.getAll({ method: Method.GetAll, data: {} })).data))\n        if (value === (path.length === 0 ? storedValue : getFromObject(storedValue, path))) payload.data.truthy[key] = storedValue;\n        else payload.data.falsy[key] = storedValue;\n    }\n\n    return payload;\n  }\n\n  public async [Method.Push]<Value = StoredValue>(payload: PushPayload<Value>): Promise<PushPayload<Value>> {\n    const { key, path, value } = payload;\n    const { data } = await this.get({ method: Method.Get, key, path });\n\n    if (data === undefined) {\n      payload.error = new MongoProviderError({\n        identifier: MongoProvider.CommonIdentifiers.PushMissingData,\n        message: path.length === 0 ? `The data at \"${key}\" does not exist.` : `The data at \"${key}.${path.join('.')}\" does not exist.`,\n        method: Method.Push\n      });\n\n      return payload;\n    }\n\n    if (!Array.isArray(data)) {\n      payload.error = new MongoProviderError({\n        identifier: MongoProvider.CommonIdentifiers.PushInvalidType,\n        message: path.length === 0 ? `The data at \"${key}\" must be an array.` : `The data at \"${key}.${path.join('.')}\" does not exist.`,\n        method: Method.Push\n      });\n\n      return payload;\n    }\n\n    data.push(value);\n\n    await this.set({ method: Method.Set, key, path, value: data });\n\n    return payload;\n  }\n\n  public async [Method.Random](payload: RandomPayload<StoredValue>): Promise<RandomPayload<StoredValue>> {\n    const docs = (await this.collection.aggregate([{ $sample: { size: 1 } }])) || [];\n\n    payload.data = docs.length > 0 ? docs[0].value : undefined;\n\n    return payload;\n  }\n\n  public async [Method.RandomKey](payload: RandomKeyPayload): Promise<RandomKeyPayload> {\n    const docs = (await this.collection.aggregate([{ $sample: { size: 1 } }])) || [];\n\n    payload.data = docs.length > 0 ? docs[0].key : undefined;\n\n    return payload;\n  }\n\n  public async [Method.Remove]<HookValue = StoredValue>(payload: RemoveByHookPayload<HookValue>): Promise<RemoveByHookPayload<HookValue>>;\n  public async [Method.Remove](payload: RemoveByValuePayload): Promise<RemoveByValuePayload>;\n  public async [Method.Remove]<HookValue = StoredValue>(payload: RemovePayload<HookValue>): Promise<RemovePayload<HookValue>> {\n    if (isRemoveByHookPayload(payload)) {\n      const { key, path, hook } = payload;\n      const { data } = await this.get<unknown[]>({ method: Method.Get, key, path });\n\n      if (data === undefined) {\n        payload.error = new MongoProviderError({\n          identifier: MongoProvider.CommonIdentifiers.RemoveMissingData,\n          message: path.length === 0 ? `The data at \"${key}\" does not exist.` : `The data at \"${key}.${path.join('.')}\" does not exist.`,\n          method: Method.Remove\n        });\n\n        return payload;\n      }\n\n      if (!Array.isArray(data)) {\n        payload.error = new MongoProviderError({\n          identifier: MongoProvider.CommonIdentifiers.RemoveInvalidType,\n          message: path.length === 0 ? `The data at \"${key}\" must be an array.` : `The data at \"${key}.${path.join('.')}\" must be an array.`,\n          method: Method.Remove\n        });\n\n        return payload;\n      }\n\n      const filterValues = await Promise.all(data.map(hook));\n\n      await this.set({ method: Method.Set, key, path, value: data.filter((_, index) => !filterValues[index]) });\n    }\n\n    if (isRemoveByValuePayload(payload)) {\n      const { key, path, value } = payload;\n      const { data } = await this.get({ method: Method.Get, key, path });\n\n      if (data === undefined) {\n        payload.error = new MongoProviderError({\n          identifier: MongoProvider.CommonIdentifiers.RemoveMissingData,\n          message: path.length === 0 ? `The data at \"${key}\" does not exist.` : `The data at \"${key}.${path.join('.')}\" does not exist.`,\n          method: Method.Remove\n        });\n\n        return payload;\n      }\n\n      if (!Array.isArray(data)) {\n        payload.error = new MongoProviderError({\n          identifier: MongoProvider.CommonIdentifiers.RemoveInvalidType,\n          message: path.length === 0 ? `The data at \"${key}\" must be an array.` : `The data at \"${key}.${path.join('.')}\" must be an array.`,\n          method: Method.Remove\n        });\n\n        return payload;\n      }\n\n      await this.set({ method: Method.Set, key, path, value: data.filter((storedValue) => value !== storedValue) });\n    }\n\n    return payload;\n  }\n\n  public async [Method.Set]<Value = StoredValue>(payload: SetPayload<Value>): Promise<SetPayload<Value>> {\n    const { key, path, value } = payload;\n\n    await this.collection.findOneAndUpdate(\n      {\n        key: { $eq: key }\n      },\n      {\n        $set: { [`${path.length > 0 ? `value.${path.join('.')}` : 'value'}`]: value }\n      },\n      {\n        upsert: true\n      }\n    );\n\n    return payload;\n  }\n\n  public async [Method.SetMany]<Value = StoredValue>(payload: SetManyPayload<Value>): Promise<SetManyPayload<Value>> {\n    const { data } = payload;\n\n    for (const [{ key, path }, value] of data) await this.set<Value>({ method: Method.Set, key, path, value });\n\n    return payload;\n  }\n\n  public async [Method.Size](payload: SizePayload): Promise<SizePayload> {\n    payload.data = (await this.collection.countDocuments({})) ?? payload.data;\n\n    return payload;\n  }\n\n  public async [Method.Some](payload: SomeByHookPayload<StoredValue>): Promise<SomeByHookPayload<StoredValue>>;\n  public async [Method.Some](payload: SomeByValuePayload): Promise<SomeByValuePayload>;\n  public async [Method.Some](payload: SomePayload<StoredValue>): Promise<SomePayload<StoredValue>> {\n    if (isSomeByHookPayload(payload)) {\n      const { hook } = payload;\n\n      for (const value of (await this.values({ method: Method.Values, data: [] })).data) {\n        const someValue = await hook(value);\n\n        if (!someValue) continue;\n\n        payload.data = true;\n\n        break;\n      }\n    }\n\n    if (isSomeByValuePayload(payload)) {\n      const { path, value } = payload;\n\n      for (const storedValue of (await this.values({ method: Method.Values, data: [] })).data) {\n        if (path.length !== 0 && value !== getFromObject(storedValue, path)) continue;\n        if (isPrimitive(storedValue) && value === storedValue) continue;\n\n        payload.data = true;\n      }\n    }\n\n    return payload;\n  }\n\n  public async [Method.Update]<HookValue = StoredValue, Value = HookValue>(\n    payload: UpdatePayload<StoredValue, HookValue, Value>\n  ): Promise<UpdatePayload<StoredValue, HookValue, Value>> {\n    const { key, path, hook } = payload;\n    const { data } = await this.get<HookValue>({ method: Method.Get, key, path });\n\n    if (data === undefined) return payload;\n\n    Reflect.set(payload, 'data', await hook(data));\n    await this.set({ method: Method.Set, key, path, value: payload.data });\n\n    return payload;\n  }\n\n  public async [Method.Values](payload: ValuesPayload<StoredValue>): Promise<ValuesPayload<StoredValue>> {\n    const docs = (await this.collection.find({})) || [];\n\n    // @ts-expect-error 2345\n    for (const doc of docs) payload.data.push(doc.value);\n\n    return payload;\n  }\n\n  private get client(): Mongoose {\n    if (isNullOrUndefined(this._client))\n      throw new JoshError({\n        message: 'Client is not connected, most likely due to `init` not being called.',\n        identifier: MongoProvider.Identifiers.NotConnected\n      });\n\n    return this._client;\n  }\n\n  private get collection(): Model<MongoDocType> {\n    if (isNullOrUndefined(this._collection))\n      throw new JoshError({\n        message: 'Client is not connected, most likely due to `init` not being called.',\n        identifier: MongoProvider.Identifiers.NotConnected\n      });\n\n    return this._collection;\n  }\n\n  public static defaultAuthentication: MongoProvider.Authentication = { dbName: 'josh', host: 'localhost', port: 27017 };\n}\n\nexport namespace MongoProvider {\n  export interface Options {\n    collectionName?: string;\n\n    enforceCollectionName?: boolean;\n\n    authentication?: Partial<Authentication> | string;\n  }\n\n  export interface Authentication {\n    user?: string;\n\n    password?: string;\n\n    dbName: string;\n\n    port: number;\n\n    host: string;\n  }\n\n  export enum Identifiers {\n    InitMissingCollectionName = 'initMissingCollectionName',\n\n    NotConnected = 'notConnected'\n  }\n}\n","export * from './lib/MongoDoc';\nexport * from './lib/MongoDocSchema';\nexport * from './lib/MongoDocType';\nexport * from './lib/MongoProvider';\nexport * from './lib/MongoProviderError';\n\nexport const version = '[VI]{version}[/VI]';\n"],"names":["Schema","mongoose","JoshProviderError","JoshProvider","JoshError","Method","isNumber","deleteFromObject","isEveryByHookPayload","isEveryByValuePayload","isFilterByHookPayload","isFilterByValuePayload","isPrimitive","getFromObject","isFindByHookPayload","isFindByValuePayload","isMapByHookPayload","isMapByPathPayload","MathOperator","isPartitionByHookPayload","isPartitionByValuePayload","isRemoveByHookPayload","isRemoveByValuePayload","isSomeByHookPayload","isSomeByValuePayload","isNullOrUndefined"],"mappings":"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"}