{"version":3,"file":"index.mjs","sources":["../src/lib/MongoDocSchema.ts","../src/lib/MongoDoc.ts","../src/lib/MongoProviderError.ts","../src/lib/MongoProvider.ts","../src/index.ts"],"sourcesContent":["import { Schema } from 'mongoose';\n\nexport const MongoDocSchema: Schema = new Schema({\n\tkey: { type: String, required: true },\n\tvalue: { type: Schema.Types.Mixed, required: true }\n});\n","import type { MongoDocType } from './MongoDocType';\nimport { MongoDocSchema } from './MongoDocSchema';\nimport mongoose, { Model } from 'mongoose';\n\nexport function generateMongoDoc(collectionName: string): Model<MongoDocType> {\n\treturn mongoose.model('MongoDoc', MongoDocSchema, collectionName);\n}\n","import { JoshProviderError } from '@joshdb/core';\n\nexport class MongoProviderError extends JoshProviderError {\n\t/**\n\t * The name for this error.\n\t */\n\tpublic get name() {\n\t\treturn 'MongoProviderError';\n\t}\n}\n","import {\n\tAutoKeyPayload,\n\tClearPayload,\n\tDecPayload,\n\tDeletePayload,\n\tEnsurePayload,\n\tEveryByHookPayload,\n\tEveryByValuePayload,\n\tEveryPayload,\n\tFilterByHookPayload,\n\tFilterByValuePayload,\n\tFilterPayload,\n\tFindByHookPayload,\n\tFindByValuePayload,\n\tFindPayload,\n\tGetAllPayload,\n\tGetManyPayload,\n\tGetPayload,\n\tHasPayload,\n\tIncPayload,\n\tisEveryByHookPayload,\n\tisEveryByValuePayload,\n\tisFilterByHookPayload,\n\tisFilterByValuePayload,\n\tisFindByHookPayload,\n\tisFindByValuePayload,\n\tisMapByHookPayload,\n\tisMapByPathPayload,\n\tisPartitionByHookPayload,\n\tisPartitionByValuePayload,\n\tisRemoveByHookPayload,\n\tisRemoveByValuePayload,\n\tisSomeByHookPayload,\n\tisSomeByValuePayload,\n\tJoshError,\n\tJoshProvider,\n\tKeysPayload,\n\tMapByHookPayload,\n\tMapByPathPayload,\n\tMapPayload,\n\tMathOperator,\n\tMathPayload,\n\tMethod,\n\tPartitionByHookPayload,\n\tPartitionByValuePayload,\n\tPartitionPayload,\n\tPushPayload,\n\tRandomKeyPayload,\n\tRandomPayload,\n\tRemoveByHookPayload,\n\tRemoveByValuePayload,\n\tRemovePayload,\n\tSetManyPayload,\n\tSetPayload,\n\tSizePayload,\n\tSomeByHookPayload,\n\tSomeByValuePayload,\n\tSomePayload,\n\tUpdatePayload,\n\tValuesPayload\n} from '@joshdb/core';\nimport { deleteFromObject, getFromObject } from '@realware/utilities';\nimport { isNullOrUndefined, isNumber, isPrimitive } from '@sapphire/utilities';\nimport mongoose, { Model, Mongoose } from 'mongoose';\nimport { generateMongoDoc } from './MongoDoc';\nimport type { MongoDocType } from './MongoDocType';\nimport { MongoProviderError } from './MongoProviderError';\n\nexport class MongoProvider<StoredValue = unknown> extends JoshProvider<StoredValue> {\n\tpublic declare options: MongoProvider.Options;\n\n\tprivate connectionURI?: string;\n\n\tprivate _client?: Mongoose;\n\n\tprivate _collection?: Model<MongoDocType>;\n\n\tpublic constructor(options: MongoProvider.Options) {\n\t\tsuper(options);\n\t}\n\n\tpublic async init(context: JoshProvider.Context<StoredValue>): Promise<JoshProvider.Context<StoredValue>> {\n\t\tcontext = await super.init(context);\n\n\t\tconst { collectionName = context.name, enforceCollectionName, authentication = MongoProvider.defaultAuthentication } = this.options;\n\n\t\tif (collectionName === undefined)\n\t\t\tthrow new JoshError({\n\t\t\t\tmessage: 'A collection name must be provided if using this class without Josh.',\n\t\t\t\tidentifier: MongoProvider.Identifiers.InitMissingCollectionName\n\t\t\t});\n\n\t\tthis._collection = generateMongoDoc(enforceCollectionName ? collectionName.replace(/[^a-z0-9]/gi, '_').toLowerCase() : collectionName);\n\n\t\tif (typeof authentication === 'string') this.connectionURI = authentication;\n\t\telse {\n\t\t\tconst { user, password, dbName, host, port }: MongoProvider.Authentication = {\n\t\t\t\tuser: authentication.user ?? MongoProvider.defaultAuthentication.user,\n\t\t\t\tpassword: authentication.password ?? MongoProvider.defaultAuthentication.password,\n\t\t\t\tdbName: authentication.dbName ?? MongoProvider.defaultAuthentication.dbName,\n\t\t\t\thost: authentication.host ?? MongoProvider.defaultAuthentication.host,\n\t\t\t\tport: authentication.port ?? MongoProvider.defaultAuthentication.port\n\t\t\t};\n\n\t\t\tthis.connectionURI = `mongodb://${user?.length && password?.length ? `${user}:${password}@` : ''}${host}:${port}/${dbName}`;\n\t\t}\n\n\t\tthis._client = await mongoose.connect(this.connectionURI);\n\n\t\treturn context;\n\t}\n\n\tpublic async close() {\n\t\treturn this.client.disconnect();\n\t}\n\n\tpublic [Method.AutoKey](payload: AutoKeyPayload): AutoKeyPayload {\n\t\tpayload.data = new mongoose.Types.ObjectId().toString();\n\n\t\treturn payload;\n\t}\n\n\tpublic async [Method.Clear](payload: ClearPayload): Promise<ClearPayload> {\n\t\tawait this.collection.deleteMany({});\n\n\t\treturn payload;\n\t}\n\n\tpublic async [Method.Dec](payload: DecPayload): Promise<DecPayload> {\n\t\tconst { key, path } = payload;\n\t\tconst { data } = await this.get<StoredValue>({ key, method: Method.Get, path });\n\n\t\tif (data === undefined) {\n\t\t\tpayload.error = new MongoProviderError({\n\t\t\t\tidentifier: MongoProvider.CommonIdentifiers.DecMissingData,\n\t\t\t\tmessage: path.length === 0 ? `The data at \"${key}\" does not exist.` : `The data at \"${key}.${path.join('.')}\" does not exist.`,\n\t\t\t\tmethod: Method.Dec\n\t\t\t});\n\n\t\t\treturn payload;\n\t\t}\n\n\t\tif (!isNumber(data)) {\n\t\t\tpayload.error = new MongoProviderError({\n\t\t\t\tidentifier: MongoProvider.CommonIdentifiers.DecInvalidType,\n\t\t\t\tmessage:\n\t\t\t\t\tpath.length === 0 ? `The data at \"${key}\" must be of type \"number\".` : `The data at \"${key}.${path.join('.')}\" must be of type \"number\".`,\n\t\t\t\tmethod: Method.Dec\n\t\t\t});\n\n\t\t\treturn payload;\n\t\t}\n\n\t\tawait this.set({ method: Method.Set, key, path, value: data - 1 });\n\n\t\treturn payload;\n\t}\n\n\tpublic async [Method.Delete](payload: DeletePayload): Promise<DeletePayload> {\n\t\tconst { key, path } = payload;\n\n\t\tif (path.length === 0) {\n\t\t\tawait this.collection.deleteOne({ key });\n\n\t\t\treturn payload;\n\t\t}\n\n\t\tif ((await this.has({ method: Method.Has, key, path, data: false })).data) {\n\t\t\tconst { data } = await this.get({ method: Method.Get, key, path: [] });\n\n\t\t\tdeleteFromObject(data, path);\n\n\t\t\tawait this.set({ method: Method.Set, key, path: [], value: data });\n\n\t\t\treturn payload;\n\t\t}\n\n\t\treturn payload;\n\t}\n\n\tpublic async [Method.Ensure](payload: EnsurePayload<StoredValue>): Promise<EnsurePayload<StoredValue>> {\n\t\tconst { key } = payload;\n\n\t\tif (!(await this.has({ key, method: Method.Has, data: false, path: [] })).data)\n\t\t\tawait this.set({ key, value: payload.defaultValue, method: Method.Set, path: [] });\n\n\t\tpayload.data = (await this.get({ key, method: Method.Get, path: [] })).data as StoredValue;\n\n\t\treturn payload;\n\t}\n\n\tpublic async [Method.Every](payload: EveryByHookPayload<StoredValue>): Promise<EveryByHookPayload<StoredValue>>;\n\tpublic async [Method.Every](payload: EveryByValuePayload): Promise<EveryByValuePayload>;\n\tpublic async [Method.Every](payload: EveryPayload<StoredValue>): Promise<EveryPayload<StoredValue>> {\n\t\tif ((await this.size({ method: Method.Size, data: 0 })).data === 0) {\n\t\t\tpayload.data = true;\n\n\t\t\treturn payload;\n\t\t}\n\t\tif (isEveryByHookPayload(payload)) {\n\t\t\tconst { hook } = payload;\n\n\t\t\tfor (const value of (await this.values({ method: Method.Values, data: [] })).data) {\n\t\t\t\tconst everyValue = await hook(value);\n\n\t\t\t\tif (everyValue) continue;\n\n\t\t\t\tpayload.data = false;\n\t\t\t}\n\t\t}\n\n\t\tif (isEveryByValuePayload(payload)) {\n\t\t\tconst { path, value } = payload;\n\n\t\t\tfor (const key of (await this.keys({ method: Method.Keys, data: [] })).data) {\n\t\t\t\tconst { data } = await this.get({ method: Method.Get, key, path });\n\n\t\t\t\tif (value === data) continue;\n\n\t\t\t\tpayload.data = false;\n\t\t\t}\n\t\t}\n\n\t\treturn payload;\n\t}\n\n\tpublic async [Method.Filter](payload: FilterByHookPayload<StoredValue>): Promise<FilterByHookPayload<StoredValue>>;\n\tpublic async [Method.Filter](payload: FilterByValuePayload<StoredValue>): Promise<FilterByValuePayload<StoredValue>>;\n\tpublic async [Method.Filter](payload: FilterPayload<StoredValue>): Promise<FilterPayload<StoredValue>> {\n\t\tif (isFilterByHookPayload(payload)) {\n\t\t\tconst { hook } = payload;\n\n\t\t\tfor (const [key, value] of Object.entries((await this.getAll({ method: Method.GetAll, data: {} })).data)) {\n\t\t\t\tconst filterValue = await hook(value);\n\n\t\t\t\tif (!filterValue) continue;\n\n\t\t\t\tpayload.data[key] = value;\n\t\t\t}\n\t\t}\n\n\t\tif (isFilterByValuePayload(payload)) {\n\t\t\tconst { path, value } = payload;\n\n\t\t\tif (!isPrimitive(value)) {\n\t\t\t\tpayload.error = new MongoProviderError({\n\t\t\t\t\tidentifier: MongoProvider.CommonIdentifiers.FilterInvalidValue,\n\t\t\t\t\tmessage: 'The \"value\" must be a primitive type.',\n\t\t\t\t\tmethod: Method.Filter\n\t\t\t\t});\n\n\t\t\t\treturn payload;\n\t\t\t}\n\n\t\t\tfor (const [key, storedValue] of Object.entries((await this.getAll({ method: Method.GetAll, data: {} })).data))\n\t\t\t\tif (value === (path.length === 0 ? storedValue : getFromObject(storedValue, path))) payload.data[key] = storedValue;\n\t\t}\n\n\t\treturn payload;\n\t}\n\n\tpublic async [Method.Find](payload: FindByHookPayload<StoredValue>): Promise<FindByHookPayload<StoredValue>>;\n\tpublic async [Method.Find](payload: FindByValuePayload<StoredValue>): Promise<FindByValuePayload<StoredValue>>;\n\tpublic async [Method.Find](payload: FindPayload<StoredValue>): Promise<FindPayload<StoredValue>> {\n\t\tif (isFindByHookPayload(payload)) {\n\t\t\tconst { hook } = payload;\n\n\t\t\tfor (const value of (await this.values({ method: Method.Values, data: [] })).data) {\n\t\t\t\tconst foundValue = await hook(value);\n\n\t\t\t\tif (!foundValue) continue;\n\n\t\t\t\tpayload.data = value;\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (isFindByValuePayload(payload)) {\n\t\t\tconst { path, value } = payload;\n\n\t\t\tif (!isPrimitive(value)) {\n\t\t\t\tpayload.error = new MongoProviderError({\n\t\t\t\t\tidentifier: MongoProvider.CommonIdentifiers.FindInvalidValue,\n\t\t\t\t\tmessage: 'The \"value\" must be of type primitive.',\n\t\t\t\t\tmethod: Method.Find\n\t\t\t\t});\n\n\t\t\t\treturn payload;\n\t\t\t}\n\n\t\t\tfor (const storedValue of (await this.values({ method: Method.Values, data: [] })).data) {\n\t\t\t\tif (payload.data !== undefined) break;\n\t\t\t\tif (value === (path.length === 0 ? storedValue : getFromObject(storedValue, path))) payload.data = storedValue;\n\t\t\t}\n\t\t}\n\n\t\treturn payload;\n\t}\n\n\tpublic async [Method.Get]<StoredValue>(payload: GetPayload<StoredValue>): Promise<GetPayload<StoredValue>> {\n\t\tconst { key, path } = payload;\n\n\t\tconst doc = await this.collection.findOne({ key });\n\n\t\tif (!doc) {\n\t\t\tpayload.data = undefined;\n\n\t\t\treturn payload;\n\t\t}\n\n\t\tReflect.set(payload, 'data', doc.value);\n\n\t\tif (path.length > 0) payload.data = getFromObject(payload.data, path);\n\n\t\treturn payload;\n\t}\n\n\tpublic async [Method.GetAll](payload: GetAllPayload<StoredValue>): Promise<GetAllPayload<StoredValue>> {\n\t\tconst docs = (await this.collection.find({})) || [];\n\n\t\tfor (const doc of docs) Reflect.set(payload.data, doc.key, doc.value);\n\n\t\treturn payload;\n\t}\n\n\tpublic async [Method.GetMany](payload: GetManyPayload<StoredValue>): Promise<GetManyPayload<StoredValue>> {\n\t\tconst { keys } = payload;\n\n\t\tconst docs = (await this.collection.find({ key: { $in: keys } })) || [];\n\n\t\tfor (const doc of docs) Reflect.set(payload.data, doc.key, doc.value);\n\n\t\treturn payload;\n\t}\n\n\tpublic async [Method.Has](payload: HasPayload): Promise<HasPayload> {\n\t\tconst { key, path } = payload;\n\t\tlet isThere;\n\n\t\tif (path.length === 0) {\n\t\t\tisThere = await this.collection.exists({ key });\n\t\t} else {\n\t\t\tisThere = await this.collection.exists({ key, [`value.${path.join('.')}`]: { $exists: true } });\n\t\t}\n\n\t\tpayload.data = isThere;\n\n\t\treturn payload;\n\t}\n\n\tpublic async [Method.Inc](payload: IncPayload): Promise<IncPayload> {\n\t\tconst { key, path } = payload;\n\t\tconst { data } = await this.get<StoredValue>({ method: Method.Get, key, path });\n\n\t\tif (data === undefined) {\n\t\t\tpayload.error = new MongoProviderError({\n\t\t\t\tidentifier: MongoProvider.CommonIdentifiers.IncMissingData,\n\t\t\t\tmessage: path.length === 0 ? `The data at \"${key}\" does not exist.` : `The data at \"${key}.${path.join('.')}\" does not exist.`,\n\t\t\t\tmethod: Method.Inc\n\t\t\t});\n\n\t\t\treturn payload;\n\t\t}\n\t\tif (!isNumber(data)) {\n\t\t\tpayload.error = new MongoProviderError({\n\t\t\t\tidentifier: MongoProvider.CommonIdentifiers.IncInvalidType,\n\t\t\t\tmessage:\n\t\t\t\t\tpath.length === 0 ? `The data at \"${key}\" must be of type \"number\".` : `The data at \"${key}.${path.join('.')}\" must be of type \"number\".`,\n\t\t\t\tmethod: Method.Inc\n\t\t\t});\n\n\t\t\treturn payload;\n\t\t}\n\n\t\tawait this.set({ method: Method.Set, key, path, value: data + 1 });\n\n\t\treturn payload;\n\t}\n\n\tpublic async [Method.Keys](payload: KeysPayload): Promise<KeysPayload> {\n\t\tconst docs = (await this.collection.find({})) || [];\n\n\t\tfor (const doc of docs) payload.data.push(doc.key);\n\n\t\treturn payload;\n\t}\n\n\tpublic async [Method.Map]<DataValue = StoredValue, HookValue = DataValue>(\n\t\tpayload: MapByHookPayload<DataValue, HookValue>\n\t): Promise<MapByHookPayload<DataValue, HookValue>>;\n\n\tpublic async [Method.Map]<DataValue = StoredValue>(payload: MapByPathPayload<DataValue>): Promise<MapByPathPayload<DataValue>>;\n\tpublic async [Method.Map]<DataValue = StoredValue, HookValue = DataValue>(\n\t\tpayload: MapPayload<DataValue, HookValue>\n\t): Promise<MapPayload<DataValue, HookValue>> {\n\t\tif (isMapByHookPayload(payload)) {\n\t\t\tconst { hook } = payload;\n\n\t\t\t// @ts-expect-error 2345\n\t\t\tfor (const value of (await this.values({ method: Method.Values, data: [] })).data) payload.data.push(await hook(value));\n\t\t}\n\n\t\tif (isMapByPathPayload(payload)) {\n\t\t\tconst { path } = payload;\n\n\t\t\tfor (const value of (await this.values({ method: Method.Values, data: [] })).data)\n\t\t\t\tpayload.data.push((path.length === 0 ? value : getFromObject(value, path)) as DataValue);\n\t\t}\n\n\t\treturn payload;\n\t}\n\n\tpublic async [Method.Math](payload: MathPayload): Promise<MathPayload> {\n\t\tconst { key, path, operator, operand } = payload;\n\t\tlet { data } = await this.get<number>({ method: Method.Get, key, path });\n\n\t\tif (data === undefined) {\n\t\t\tpayload.error = new MongoProviderError({\n\t\t\t\tidentifier: MongoProvider.CommonIdentifiers.MathMissingData,\n\t\t\t\tmessage: path.length === 0 ? `The data at \"${key}\" does not exist.` : `The data at \"${key}.${path.join('.')}\" does not exist.`,\n\t\t\t\tmethod: Method.Math\n\t\t\t});\n\n\t\t\treturn payload;\n\t\t}\n\n\t\tif (!isNumber(data)) {\n\t\t\tpayload.error = new MongoProviderError({\n\t\t\t\tidentifier: MongoProvider.CommonIdentifiers.MathInvalidType,\n\t\t\t\tmessage: path.length === 0 ? `The data at \"${key}\" must be a number.` : `The data at \"${key}.${path.join('.')}\" must be a number.`,\n\t\t\t\tmethod: Method.Math\n\t\t\t});\n\n\t\t\treturn payload;\n\t\t}\n\n\t\tswitch (operator) {\n\t\t\tcase MathOperator.Addition:\n\t\t\t\tdata += operand;\n\n\t\t\t\tbreak;\n\n\t\t\tcase MathOperator.Subtraction:\n\t\t\t\tdata -= operand;\n\n\t\t\t\tbreak;\n\n\t\t\tcase MathOperator.Multiplication:\n\t\t\t\tdata *= operand;\n\n\t\t\t\tbreak;\n\n\t\t\tcase MathOperator.Division:\n\t\t\t\tdata /= operand;\n\n\t\t\t\tbreak;\n\n\t\t\tcase MathOperator.Remainder:\n\t\t\t\tdata %= operand;\n\n\t\t\t\tbreak;\n\n\t\t\tcase MathOperator.Exponent:\n\t\t\t\tdata **= operand;\n\n\t\t\t\tbreak;\n\t\t}\n\n\t\tawait this.set({ method: Method.Set, key, path, value: data });\n\n\t\treturn payload;\n\t}\n\n\tpublic async [Method.Partition](payload: PartitionByHookPayload<StoredValue>): Promise<PartitionByHookPayload<StoredValue>>;\n\tpublic async [Method.Partition](payload: PartitionByValuePayload<StoredValue>): Promise<PartitionByValuePayload<StoredValue>>;\n\tpublic async [Method.Partition](payload: PartitionPayload<StoredValue>): Promise<PartitionPayload<StoredValue>> {\n\t\tif (isPartitionByHookPayload(payload)) {\n\t\t\tconst { hook } = payload;\n\n\t\t\tfor (const [key, value] of Object.entries((await this.getAll({ method: Method.GetAll, data: {} })).data)) {\n\t\t\t\tconst filterValue = await hook(value);\n\n\t\t\t\tif (filterValue) payload.data.truthy[key] = value;\n\t\t\t\telse payload.data.falsy[key] = value;\n\t\t\t}\n\t\t}\n\n\t\tif (isPartitionByValuePayload(payload)) {\n\t\t\tconst { path, value } = payload;\n\n\t\t\tif (!isPrimitive(value)) {\n\t\t\t\tpayload.error = new MongoProviderError({\n\t\t\t\t\tidentifier: MongoProvider.CommonIdentifiers.PartitionInvalidValue,\n\t\t\t\t\tmessage: 'The \"value\" must be a primitive type.',\n\t\t\t\t\tmethod: Method.Partition\n\t\t\t\t});\n\n\t\t\t\treturn payload;\n\t\t\t}\n\n\t\t\tfor (const [key, storedValue] of Object.entries((await this.getAll({ method: Method.GetAll, data: {} })).data))\n\t\t\t\tif (value === (path.length === 0 ? storedValue : getFromObject(storedValue, path))) payload.data.truthy[key] = storedValue;\n\t\t\t\telse payload.data.falsy[key] = storedValue;\n\t\t}\n\n\t\treturn payload;\n\t}\n\n\tpublic async [Method.Push]<Value = StoredValue>(payload: PushPayload<Value>): Promise<PushPayload<Value>> {\n\t\tconst { key, path, value } = payload;\n\t\tconst { data } = await this.get({ method: Method.Get, key, path });\n\n\t\tif (data === undefined) {\n\t\t\tpayload.error = new MongoProviderError({\n\t\t\t\tidentifier: MongoProvider.CommonIdentifiers.PushMissingData,\n\t\t\t\tmessage: path.length === 0 ? `The data at \"${key}\" does not exist.` : `The data at \"${key}.${path.join('.')}\" does not exist.`,\n\t\t\t\tmethod: Method.Push\n\t\t\t});\n\n\t\t\treturn payload;\n\t\t}\n\n\t\tif (!Array.isArray(data)) {\n\t\t\tpayload.error = new MongoProviderError({\n\t\t\t\tidentifier: MongoProvider.CommonIdentifiers.PushInvalidType,\n\t\t\t\tmessage: path.length === 0 ? `The data at \"${key}\" must be an array.` : `The data at \"${key}.${path.join('.')}\" does not exist.`,\n\t\t\t\tmethod: Method.Push\n\t\t\t});\n\n\t\t\treturn payload;\n\t\t}\n\n\t\tdata.push(value);\n\n\t\tawait this.set({ method: Method.Set, key, path, value: data });\n\n\t\treturn payload;\n\t}\n\n\tpublic async [Method.Random](payload: RandomPayload<StoredValue>): Promise<RandomPayload<StoredValue>> {\n\t\tconst docs = (await this.collection.aggregate([{ $sample: { size: 1 } }])) || [];\n\n\t\tpayload.data = docs.length > 0 ? docs[0].value : undefined;\n\n\t\treturn payload;\n\t}\n\n\tpublic async [Method.RandomKey](payload: RandomKeyPayload): Promise<RandomKeyPayload> {\n\t\tconst docs = (await this.collection.aggregate([{ $sample: { size: 1 } }])) || [];\n\n\t\tpayload.data = docs.length > 0 ? docs[0].key : undefined;\n\n\t\treturn payload;\n\t}\n\n\tpublic async [Method.Remove]<HookValue = StoredValue>(payload: RemoveByHookPayload<HookValue>): Promise<RemoveByHookPayload<HookValue>>;\n\tpublic async [Method.Remove](payload: RemoveByValuePayload): Promise<RemoveByValuePayload>;\n\tpublic async [Method.Remove]<HookValue = StoredValue>(payload: RemovePayload<HookValue>): Promise<RemovePayload<HookValue>> {\n\t\tif (isRemoveByHookPayload(payload)) {\n\t\t\tconst { key, path, hook } = payload;\n\t\t\tconst { data } = await this.get<unknown[]>({ method: Method.Get, key, path });\n\n\t\t\tif (data === undefined) {\n\t\t\t\tpayload.error = new MongoProviderError({\n\t\t\t\t\tidentifier: MongoProvider.CommonIdentifiers.RemoveMissingData,\n\t\t\t\t\tmessage: path.length === 0 ? `The data at \"${key}\" does not exist.` : `The data at \"${key}.${path.join('.')}\" does not exist.`,\n\t\t\t\t\tmethod: Method.Remove\n\t\t\t\t});\n\n\t\t\t\treturn payload;\n\t\t\t}\n\n\t\t\tif (!Array.isArray(data)) {\n\t\t\t\tpayload.error = new MongoProviderError({\n\t\t\t\t\tidentifier: MongoProvider.CommonIdentifiers.RemoveInvalidType,\n\t\t\t\t\tmessage: path.length === 0 ? `The data at \"${key}\" must be an array.` : `The data at \"${key}.${path.join('.')}\" must be an array.`,\n\t\t\t\t\tmethod: Method.Remove\n\t\t\t\t});\n\n\t\t\t\treturn payload;\n\t\t\t}\n\n\t\t\tconst filterValues = await Promise.all(data.map(hook));\n\n\t\t\tawait this.set({ method: Method.Set, key, path, value: data.filter((_, index) => !filterValues[index]) });\n\t\t}\n\n\t\tif (isRemoveByValuePayload(payload)) {\n\t\t\tconst { key, path, value } = payload;\n\t\t\tconst { data } = await this.get({ method: Method.Get, key, path });\n\n\t\t\tif (data === undefined) {\n\t\t\t\tpayload.error = new MongoProviderError({\n\t\t\t\t\tidentifier: MongoProvider.CommonIdentifiers.RemoveMissingData,\n\t\t\t\t\tmessage: path.length === 0 ? `The data at \"${key}\" does not exist.` : `The data at \"${key}.${path.join('.')}\" does not exist.`,\n\t\t\t\t\tmethod: Method.Remove\n\t\t\t\t});\n\n\t\t\t\treturn payload;\n\t\t\t}\n\n\t\t\tif (!Array.isArray(data)) {\n\t\t\t\tpayload.error = new MongoProviderError({\n\t\t\t\t\tidentifier: MongoProvider.CommonIdentifiers.RemoveInvalidType,\n\t\t\t\t\tmessage: path.length === 0 ? `The data at \"${key}\" must be an array.` : `The data at \"${key}.${path.join('.')}\" must be an array.`,\n\t\t\t\t\tmethod: Method.Remove\n\t\t\t\t});\n\n\t\t\t\treturn payload;\n\t\t\t}\n\n\t\t\tawait this.set({ method: Method.Set, key, path, value: data.filter((storedValue) => value !== storedValue) });\n\t\t}\n\n\t\treturn payload;\n\t}\n\n\tpublic async [Method.Set]<Value = StoredValue>(payload: SetPayload<Value>): Promise<SetPayload<Value>> {\n\t\tconst { key, path, value } = payload;\n\n\t\tawait this.collection.findOneAndUpdate(\n\t\t\t{\n\t\t\t\tkey: { $eq: key }\n\t\t\t},\n\t\t\t{\n\t\t\t\t$set: { [`${path.length > 0 ? `value.${path.join('.')}` : 'value'}`]: value }\n\t\t\t},\n\t\t\t{\n\t\t\t\tupsert: true\n\t\t\t}\n\t\t);\n\n\t\treturn payload;\n\t}\n\n\tpublic async [Method.SetMany]<Value = StoredValue>(payload: SetManyPayload<Value>): Promise<SetManyPayload<Value>> {\n\t\tconst { data } = payload;\n\n\t\tfor (const [{ key, path }, value] of data) await this.set<Value>({ method: Method.Set, key, path, value });\n\n\t\treturn payload;\n\t}\n\n\tpublic async [Method.Size](payload: SizePayload): Promise<SizePayload> {\n\t\tpayload.data = (await this.collection.countDocuments({})) ?? payload.data;\n\n\t\treturn payload;\n\t}\n\n\tpublic async [Method.Some](payload: SomeByHookPayload<StoredValue>): Promise<SomeByHookPayload<StoredValue>>;\n\tpublic async [Method.Some](payload: SomeByValuePayload): Promise<SomeByValuePayload>;\n\tpublic async [Method.Some](payload: SomePayload<StoredValue>): Promise<SomePayload<StoredValue>> {\n\t\tif (isSomeByHookPayload(payload)) {\n\t\t\tconst { hook } = payload;\n\n\t\t\tfor (const value of (await this.values({ method: Method.Values, data: [] })).data) {\n\t\t\t\tconst someValue = await hook(value);\n\n\t\t\t\tif (!someValue) continue;\n\n\t\t\t\tpayload.data = true;\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (isSomeByValuePayload(payload)) {\n\t\t\tconst { path, value } = payload;\n\n\t\t\tfor (const storedValue of (await this.values({ method: Method.Values, data: [] })).data) {\n\t\t\t\tif (path.length !== 0 && value !== getFromObject(storedValue, path)) continue;\n\t\t\t\tif (isPrimitive(storedValue) && value === storedValue) continue;\n\n\t\t\t\tpayload.data = true;\n\t\t\t}\n\t\t}\n\n\t\treturn payload;\n\t}\n\n\tpublic async [Method.Update]<HookValue = StoredValue, Value = HookValue>(\n\t\tpayload: UpdatePayload<StoredValue, HookValue, Value>\n\t): Promise<UpdatePayload<StoredValue, HookValue, Value>> {\n\t\tconst { key, path, hook } = payload;\n\t\tconst { data } = await this.get<HookValue>({ method: Method.Get, key, path });\n\n\t\tif (data === undefined) return payload;\n\n\t\tReflect.set(payload, 'data', await hook(data));\n\t\tawait this.set({ method: Method.Set, key, path, value: payload.data });\n\n\t\treturn payload;\n\t}\n\n\tpublic async [Method.Values](payload: ValuesPayload<StoredValue>): Promise<ValuesPayload<StoredValue>> {\n\t\tconst docs = (await this.collection.find({})) || [];\n\n\t\t// @ts-expect-error 2345\n\t\tfor (const doc of docs) payload.data.push(doc.value);\n\n\t\treturn payload;\n\t}\n\n\tprivate get client(): Mongoose {\n\t\tif (isNullOrUndefined(this._client))\n\t\t\tthrow new JoshError({\n\t\t\t\tmessage: 'Client is not connected, most likely due to `init` not being called.',\n\t\t\t\tidentifier: MongoProvider.Identifiers.NotConnected\n\t\t\t});\n\n\t\treturn this._client;\n\t}\n\n\tprivate get collection(): Model<MongoDocType> {\n\t\tif (isNullOrUndefined(this._collection))\n\t\t\tthrow new JoshError({\n\t\t\t\tmessage: 'Client is not connected, most likely due to `init` not being called.',\n\t\t\t\tidentifier: MongoProvider.Identifiers.NotConnected\n\t\t\t});\n\n\t\treturn this._collection;\n\t}\n\n\tpublic static defaultAuthentication: MongoProvider.Authentication = { dbName: 'josh', host: 'localhost', port: 27017 };\n}\n\nexport namespace MongoProvider {\n\texport interface Options {\n\t\tcollectionName?: string;\n\n\t\tenforceCollectionName?: boolean;\n\n\t\tauthentication?: Partial<Authentication> | string;\n\t}\n\n\texport interface Authentication {\n\t\tuser?: string;\n\n\t\tpassword?: string;\n\n\t\tdbName: string;\n\n\t\tport: number;\n\n\t\thost: string;\n\t}\n\n\texport enum Identifiers {\n\t\tInitMissingCollectionName = 'initMissingCollectionName',\n\n\t\tNotConnected = 'notConnected'\n\t}\n}\n","export * from './lib/MongoDoc';\nexport * from './lib/MongoDocSchema';\nexport * from './lib/MongoDocType';\nexport * from './lib/MongoProvider';\nexport * from './lib/MongoProviderError';\n\nexport const version = '[VI]{version}[/VI]';\n"],"names":[],"mappings":"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"}